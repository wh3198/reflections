When would you want to use a remote repository rather than keeping all your work local?
When collaborating with others to use Git Hub as a File Share and update type of application.
Perhaps also as a backup to material on my own computer for recovery and other backup purposes.

Why might you want to always pull changes manually rather than having Git automatically stay
up-to-date with your remote repository?
I'm not sure there is a direct answer to this question other than it depends on your preference.
If I'm using Git Hub as a backup copy for my original I'd want it to be automatic.  However, if I
did this I would have to make sure that when I commit to my locally stored remote I am ready to commit.
While doing it manually gives me an opportunity to check it a second time before sharing it with others
this seems redundant if I have already checked it before committing it locally.  In any event doing it
manually gives me an additional chance to check the data in the commit, but does seem redundant to me.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork is a copy of a Git Hub repository to another Git Hub location like my account on Git Hub.
Clones are copies of a Git Hub Repository to my PC's hard drive.
Branches are separate parts of my file with a common parent commit somewhere in the chain of all the branches.

What is the benefit of having a copy of the last known state of the remote stored locally?
It is my copy of my changes versus the Git Hub copy may contain someone else's changes.  That means I
have a version to which to compare the changes someone else may have made to my own and able to do that
separately from my own master branch.  However, I'm looking at the redundancy of this and wondering why
it is necessary.  I'm feeling as if this is purposefully being made more complex than necessary and finding
this very very confusing.  Also already feeling like once I leave this class that the retention of this
is going to be zero which is concerning.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A 60 second phone conversation, an e-mail, a text, anything would be simpler than this. This seems overly
redundant and complex.
